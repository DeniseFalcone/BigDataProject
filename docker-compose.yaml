services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.5.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - "broker-kafka-data:/var/lib/kafka"


  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on: 
      - broker
    ports:
      - "7777:8080"
    #estart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=broker
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-db-volume:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8089:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  image-processing-service:
    image: image-processing-service
    build:
      context: ./image_processing
      dockerfile: Dockerfile
    depends_on:
      broker:
          condition: service_healthy
      mongo:
          condition: service_started
    environment:
      KAFKA_URL: 'broker:29092'
      KAFKA_PATH_TOPIC: get_path_topic
      DATA_FOLDER: /data
      FOLDER_TO_WATCH: /data/imageserver
      DATASET_FOLDER: /data/dataset
      PROCESSED_FOLDER: /data/processed_images
      TO_PROCESS_FOLDER: /data/to_process_images
      MONGO_URL: mongodb://root:example@mongo:27017/
      MONGO_DB: prova_db
      MONGO_METADATA_COLLECTION: images_metadata
    volumes:
      - ./data:/data

  streamlit:
    image: streamlit_image
    build: 
      context: ./web_app
      dockerfile: Dockerfile
    ports:
      - 8501:8501
    volumes:
      - streamlit:/web_app/streamlit
      - ./data:/data
    environment:
      PROCESSED_FOLDER: /data/processed_images
      TO_PROCESS_FOLDER: /data/to_process_images
      MONGO_URL: mongodb://root:example@mongo:27017/
      MONGO_DB : prova_db
      MONGO_METADATA_COLLECTION : images_metadata
    

volumes:
  broker-kafka-data:
    driver: local
  mongo-db-volume:
    driver: local
  streamlit:
    driver: local

